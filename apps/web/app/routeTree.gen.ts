/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout.index'
import { Route as LayoutTvShowsImport } from './routes/_layout.tv-shows'
import { Route as LayoutTrendingImport } from './routes/_layout.trending'
import { Route as LayoutPeopleImport } from './routes/_layout.people'
import { Route as LayoutMoviesImport } from './routes/_layout.movies'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTvShowsRoute = LayoutTvShowsImport.update({
  id: '/tv-shows',
  path: '/tv-shows',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutTrendingRoute = LayoutTrendingImport.update({
  id: '/trending',
  path: '/trending',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutPeopleRoute = LayoutPeopleImport.update({
  id: '/people',
  path: '/people',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutMoviesRoute = LayoutMoviesImport.update({
  id: '/movies',
  path: '/movies',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/movies': {
      id: '/_layout/movies'
      path: '/movies'
      fullPath: '/movies'
      preLoaderRoute: typeof LayoutMoviesImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/people': {
      id: '/_layout/people'
      path: '/people'
      fullPath: '/people'
      preLoaderRoute: typeof LayoutPeopleImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/trending': {
      id: '/_layout/trending'
      path: '/trending'
      fullPath: '/trending'
      preLoaderRoute: typeof LayoutTrendingImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/tv-shows': {
      id: '/_layout/tv-shows'
      path: '/tv-shows'
      fullPath: '/tv-shows'
      preLoaderRoute: typeof LayoutTvShowsImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutMoviesRoute: typeof LayoutMoviesRoute
  LayoutPeopleRoute: typeof LayoutPeopleRoute
  LayoutTrendingRoute: typeof LayoutTrendingRoute
  LayoutTvShowsRoute: typeof LayoutTvShowsRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutMoviesRoute: LayoutMoviesRoute,
  LayoutPeopleRoute: LayoutPeopleRoute,
  LayoutTrendingRoute: LayoutTrendingRoute,
  LayoutTvShowsRoute: LayoutTvShowsRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/movies': typeof LayoutMoviesRoute
  '/people': typeof LayoutPeopleRoute
  '/trending': typeof LayoutTrendingRoute
  '/tv-shows': typeof LayoutTvShowsRoute
  '/': typeof LayoutIndexRoute
}

export interface FileRoutesByTo {
  '/movies': typeof LayoutMoviesRoute
  '/people': typeof LayoutPeopleRoute
  '/trending': typeof LayoutTrendingRoute
  '/tv-shows': typeof LayoutTvShowsRoute
  '/': typeof LayoutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/movies': typeof LayoutMoviesRoute
  '/_layout/people': typeof LayoutPeopleRoute
  '/_layout/trending': typeof LayoutTrendingRoute
  '/_layout/tv-shows': typeof LayoutTvShowsRoute
  '/_layout/': typeof LayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/movies' | '/people' | '/trending' | '/tv-shows' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/movies' | '/people' | '/trending' | '/tv-shows' | '/'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/movies'
    | '/_layout/people'
    | '/_layout/trending'
    | '/_layout/tv-shows'
    | '/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/movies",
        "/_layout/people",
        "/_layout/trending",
        "/_layout/tv-shows",
        "/_layout/"
      ]
    },
    "/_layout/movies": {
      "filePath": "_layout.movies.tsx",
      "parent": "/_layout"
    },
    "/_layout/people": {
      "filePath": "_layout.people.tsx",
      "parent": "/_layout"
    },
    "/_layout/trending": {
      "filePath": "_layout.trending.tsx",
      "parent": "/_layout"
    },
    "/_layout/tv-shows": {
      "filePath": "_layout.tv-shows.tsx",
      "parent": "/_layout"
    },
    "/_layout/": {
      "filePath": "_layout.index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
