name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  code_check:
    name: "Code Check"
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_CACHE: remote:rw

    steps:
      - name: 🏗 Setup Repository
        uses: actions/checkout@v4

      - name: 🏗 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: pnpm

      - name: 📦 Install Dependencies
        run: pnpm install

      - name: ☂️ Manypkg
        run: pnpm manypkg

      - name: ✂️ Knip
        run: pnpm knip

      - name: 🎨 Format
        run: pnpm format

      - name: ✔️ Check
        run: pnpm check

      - name: 🔄 Merge Coverage Reports
        run: |
          pnpm dlx istanbul-merge --out coverage/coverage-final.json **/coverage/**/*.json

      - name: ☁️ Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
          flags: monorepo
          fail_ci_if_error: true
          verbose: true

  e2e:
    name: "End-to-End"
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_CACHE: remote:rw

    steps:
      - name: 🏗 Setup Repository
        uses: actions/checkout@v4

      - name: 🏗 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: 🏗 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: pnpm

      - name: 📦 Install Dependencies
        run: pnpm install

      - name: 📦 Install Playwright Browsers
        run: pnpm --filter web exec playwright install --with-deps

      - name: 🧪 Run End-to-End Tests
        run: pnpm e2e
        env:
          SERVER_PRESET: node-server
          TMDB_API_TOKEN: ${{ secrets.TMDB_API_TOKEN }}

      - name: 🗃️ Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30
